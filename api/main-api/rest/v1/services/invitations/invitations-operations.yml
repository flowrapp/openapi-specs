invitations:
  register-user-from-invitation:
    post:
      summary: Register user from invitation
      description: Registers a new user an accepts the invitation.
      tags:
        - Invitations
      operationId: registerUserFromInvitation
      parameters:
        - name: token
          in: query
          required: true
          description: Token from the invitation email to validate the user registration
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      requestBody:
        description: Registration details for the new user
        required: true
        content:
          application/json:
            schema:
              $ref: '../../components/invitations/components.yml#/components/schemas/RegisterUserFromInvitationRequestDTO'
            example:
              username: "johndoe"
              phone: "+1234567890"
              password: "securePassword123"
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid request or token
        '404':
          description: Token not found
        '409':
          description: Username or phone already exists

  accept-invitation:
    post:
      summary: Accept an invitation
      description: Accepts an invitation to join a business using a token.
      tags:
        - Invitations
      operationId: acceptInvitation
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]
      parameters:
        - name: token
          in: query
          required: true
          description: Token to validate the invitation
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      responses:
        '200':
          description: Invitation accepted successfully
        '400':
          description: Invalid request or token
        '404':
          description: Invitation not found
        '410':
          description: Invitation expired or already used

  get-and-create-invitations:
    post:
      summary: Create a business invitation
      description: Creates a new invitation to join a business with a specified role.
      tags:
        - Invitations
      operationId: createBusinessInvitation
      security:
        - basicAuth: []
        - bearerAuth: []
      parameters:
        - name: businessId
          in: path
          required: true
          description: Unique identifier of the business
          schema:
            type: integer
      requestBody:
        description: Invitation details
        required: true
        content:
          application/json:
            schema:
              $ref: '../../components/invitations/components.yml#/components/schemas/InvitationRequestDTO'
            example:
              email: "invitee@example.com"
              role: "MANAGER"
      responses:
        '201':
          description: Invitation created successfully
          content:
            application/json:
              schema:
                $ref: '../../components/invitations/components.yml#/components/schemas/InvitationResponseDTO'
              example:
                id: 123
                email: "invitee@example.com"
                role: "MANAGER"
                status: "PENDING"
                createdAt: "2023-06-15T14:30:00+00:00"
                expiresAt: "2023-06-22T14:30:00+00:00"
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - User does not have permission to create invitations
        '404':
          description: Business not found
        '409':
          description: Conflict - User already invited or already a member
    get:
      summary: Get invitations for a business
      description: Retrieves a list of all pending invitations for the specified business.
      tags:
        - Invitations
      operationId: getBusinessInvitations
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]
      parameters:
        - name: businessId
          in: path
          required: true
          description: Unique identifier of the business
          schema:
            type: integer
        - name: status
          in: query
          required: false
          description: Filter invitations by status
          schema:
            type: string
            enum: [ PENDING, ACCEPTED, DECLINED, EXPIRED ]
            default: PENDING
      responses:
        '200':
          description: Invitations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../../components/invitations/components.yml#/components/schemas/InvitationResponseDTO'
              example:
                - id: 123
                  email: "invitee@example.com"
                  role: "COLLABORATOR"
                  status: "PENDING"
                  createdAt: "2023-06-15T14:30:00+00:00"
                  expiresAt: "2023-06-22T14:30:00+00:00"
                - id: 124
                  email: "another@example.com"
                  role: "EMPLOYEE"
                  status: "PENDING"
                  createdAt: "2023-06-16T10:15:00+00:00"
                  expiresAt: "2023-06-23T10:15:00+00:00"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - User does not have permission to view invitations
        '404':
          description: Business not found

  delete-business-invitation:
    delete:
      summary: Delete a business invitation
      description: Deletes an existing invitation to join a business.
      tags:
        - Invitations
      operationId: deleteBusinessInvitation
      security:
        - basicAuth: []
        - bearerAuth: []
      parameters:
        - name: businessId
          in: path
          required: true
          description: Unique identifier of the business
          schema:
            type: integer
        - name: invitationId
          in: path
          required: true
          description: Unique identifier of the invitation
          schema:
            type: integer
      responses:
        '204':
          description: Invitation deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - User does not have permission to delete invitations
        '404':
          description: Business or invitation not found

  get-invitations:
    get:
      summary: Get invitations for user
      description: Retrieves a list of all invitations for the currently authenticated user.
      tags:
        - Invitations
      operationId: getUserInvitations
      security:
        - basicAuth: [ ]
        - bearerAuth: [ ]
      parameters:
        - name: status
          in: query
          required: false
          description: Filter invitations by status
          schema:
            type: string
            enum: [ PENDING, ACCEPTED, DECLINED, EXPIRED ]
            default: PENDING
      responses:
        '200':
          description: Invitations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../../components/invitations/components.yml#/components/schemas/InvitationResponseDTO'
              example:
                - id: 123
                  email: "invitee@example.com"
                  role: "COLLABORATOR"
                  status: "PENDING"
                  createdAt: "2023-06-15T14:30:00+00:00"
                  expiresAt: "2023-06-22T14:30:00+00:00"
                - id: 124
                  email: "another@example.com"
                  role: "EMPLOYEE"
                  status: "PENDING"
                  createdAt: "2023-06-16T10:15:00+00:00"
                  expiresAt: "2023-06-23T10:15:00+00:00"
        '401':
          description: Unauthorized
